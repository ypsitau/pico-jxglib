//==============================================================================
// Keyboard.cpp
//==============================================================================
#include "jxglib/Keyboard.h"

namespace jxglib {

//------------------------------------------------------------------------------
// KeyLayout
//------------------------------------------------------------------------------
KeyData KeyLayout::CreateKeyData(uint8_t keyCode, uint8_t modifier) const
{
	bool isCtrlDown = !!(modifier & (KeyData::Mod::CtrlL | KeyData::Mod::CtrlR));
	char charCode = (keyCode == VK_RETURN)? '\0' : (keyCode == VK_TAB)? '\0' :
			(keyCode == VK_ESCAPE)? '\0' : ConvKeyCodeToCharCode(keyCode, modifier);
	if (isCtrlDown && ('A' <= charCode && charCode <='Z')) charCode -= '@';
	return (charCode == 0)? KeyData(keyCode, true, modifier) : KeyData(charCode, false, modifier);
}

uint8_t KeyLayout::ConvKeyCodeToCharCode(uint8_t keyCode, uint8_t modifier) const
{
	const CharEntry& charEntry = GetCharEntryTbl()[keyCode];
	return (modifier & (KeyData::Mod::ShiftL | KeyData::Mod::ShiftR))? charEntry.charCodeShift : charEntry.charCode;
}

//------------------------------------------------------------------------------
// Keyboard
//------------------------------------------------------------------------------
Keyboard::Keyboard() : pKeyLayout_{&KeyLayout_109::Instance}
{}

char Keyboard::GetChar()
{
	KeyData keyData;
	for (;;) {
		if (GetKeyDataNB(&keyData) && keyData.IsChar()) break;
		Tickable::Tick();
	}
	return keyData.GetChar();
}

int Keyboard::SenseKeyCode(uint8_t keyCodeTbl[], int nKeysMax)
{
	if (nKeysMax == 0) return 0;
	int nKeys = 0;
	KeyData keyData;
	if (GetKeyDataNB(&keyData) && keyData.IsKeyCode()) keyCodeTbl[nKeys++] = keyData.GetKeyCode();
	return nKeys;
}

//------------------------------------------------------------------------------
// KeyLayout_101
//------------------------------------------------------------------------------
const KeyLayout_101 KeyLayout_101::Instance;

const KeyLayout::CharEntry* KeyLayout_101::GetCharEntryTbl() const
{
	static const CharEntry charEntryTbl[] = {
		{0,			0		},	// 0x00			
		{0,			0		},	// 0x01: VK_LBUTTON		
		{0,			0		},	// 0x02: VK_RBUTTON		
		{0,			0		},	// 0x03: VK_CANCEL			
		{0,			0		},	// 0x04: VK_MBUTTON		
		{0,			0		},	// 0x05: VK_XBUTTON1		
		{0,			0		},	// 0x06: VK_XBUTTON2		
		{0,			0		},	// 0x07			
		{'\b',		'\b'	},	// 0x08: VK_BACK			
		{'\t',		'\t'	},	// 0x09: VK_TAB			
		{0,			0		},	// 0x0a			
		{0,			0		},	// 0x0b
		{0,			0		},	// 0x0c: VK_CLEAR
		{'\r',		'\r'	},	// 0x0d: VK_RETURN
		{0,			0		},	// 0x0e
		{0,			0		},	// 0x0f
		{0,			0		},	// 0x10: VK_SHIFT
		{0,			0		},	// 0x11: VK_CONTROL
		{0,			0		},	// 0x12: VK_MENU
		{0,			0		},	// 0x13: VK_PAUSE
		{0,			0		},	// 0x14: VK_CAPITAL
		{0,			0		},	// 0x15: VK_KANA, VK_HANGUL
		{0,			0		},	// 0x16: VK_IME_ON
		{0,			0		},	// 0x17: VK_JUNJA
		{0,			0		},	// 0x18: VK_FINAL
		{0,			0		},	// 0x19: VK_KANJI
		{0,			0		},	// 0x1a
		{'\x1b',	'\x1b'	},	// 0x1b: VK_ESCAPE
		{0,			0		},	// 0x1c: VK_CONVERT
		{0,			0		},	// 0x1d: VK_NONCONVERT
		{0,			0		},	// 0x1e: VK_ACCEPT
		{0,			0		},	// 0x1f: VK_MODECHANGE
		{' ',		' '		},	// 0x20: VK_SPACE
		{0,			0		},	// 0x21: VK_PRIOR
		{0,			0		},	// 0x22: VK_NEXT
		{0,			0		},	// 0x23: VK_END
		{0,			0		},	// 0x24: VK_HOME
		{0,			0		},	// 0x25: VK_LEFT
		{0,			0		},	// 0x26: VK_UP
		{0,			0		},	// 0x27: VK_RIGHT
		{0,			0		},	// 0x28: VK_DOWN
		{0,			0		},	// 0x29: VK_SELECT
		{0,			0		},	// 0x2a: VK_PRINT
		{0,			0		},	// 0x2b: VK_EXECUTE
		{0,			0		},	// 0x2c: VK_SNAPSHOT
		{0,			0		},	// 0x2d: VK_INSERT
		{0,			0		},	// 0x2e: VK_DELETE
		{0,			0		},	// 0x2f: VK_HELP
		{'0',		')'	 	},	// 0x30: '0'
		{'1',		'!' 	},	// 0x31: '1'
		{'2',		'@' 	},	// 0x32: '2'
		{'3',		'#' 	},	// 0x33: '3'
		{'4',		'$' 	},	// 0x34: '4'
		{'5',		'%' 	},	// 0x35: '5'
		{'6',		'^' 	},	// 0x36: '6'
		{'7',		'&' 	},	// 0x37: '7'
		{'8',		'*' 	},	// 0x38: '8'
		{'9',		'(' 	},	// 0x39: '9'
		{0,			0		},	// 0x3a
		{0,			0		},	// 0x3b
		{0,			0		},	// 0x3c
		{0,			0		},	// 0x3d
		{0,			0		},	// 0x3e
		{0,			0		},	// 0x3f
		{0,			0		},	// 0x40
		{'a',		'A' 	},	// 0x41: 'A'
		{'b',		'B' 	},	// 0x42: 'B'
		{'c',		'C' 	},	// 0x43: 'C'
		{'d',		'D' 	},	// 0x44: 'D'
		{'e',		'E' 	},	// 0x45: 'E'
		{'f',		'F' 	},	// 0x46: 'F'
		{'g',		'G' 	},	// 0x47: 'G'
		{'h',		'H' 	},	// 0x48: 'H'
		{'i',		'I' 	},	// 0x49: 'I'
		{'j',		'J' 	},	// 0x4a: 'J'
		{'k',		'K' 	},	// 0x4b: 'K'
		{'l',		'L' 	},	// 0x4c: 'L'
		{'m',		'M' 	},	// 0x4d: 'M'
		{'n',		'N' 	},	// 0x4e: 'N'
		{'o',		'O' 	},	// 0x4f: 'O'
		{'p',		'P' 	},	// 0x50: 'P'
		{'q',		'Q' 	},	// 0x51: 'Q'
		{'r',		'R' 	},	// 0x52: 'R'
		{'s',		'S' 	},	// 0x53: 'S'
		{'t',		'T' 	},	// 0x54: 'T'
		{'u',		'U' 	},	// 0x55: 'U'
		{'v',		'V' 	},	// 0x56: 'V'
		{'w',		'W' 	},	// 0x57: 'W'
		{'x',		'X' 	},	// 0x58: 'X'
		{'y',		'Y' 	},	// 0x59: 'Y'
		{'z',		'Z' 	},	// 0x5a: 'Z'
		{0,			0		},	// 0x5b: VK_LWIN
		{0,			0		},	// 0x5c: VK_RWIN
		{0,			0		},	// 0x5d: VK_APPS
		{0,			0		},	// 0x5e
		{0,			0		},	// 0x5f: VK_SLEEP
		{'0',		0		},	// 0x60: VK_NUMPAD0
		{'1',		0		},	// 0x61: VK_NUMPAD1
		{'2',		0		},	// 0x62: VK_NUMPAD2
		{'3',		0		},	// 0x63: VK_NUMPAD3
		{'4',		0		},	// 0x64: VK_NUMPAD4
		{'5',		0		},	// 0x65: VK_NUMPAD5
		{'6',		0		},	// 0x66: VK_NUMPAD6
		{'7',		0		},	// 0x67: VK_NUMPAD7
		{'8',		0		},	// 0x68: VK_NUMPAD8
		{'9',		0		},	// 0x69: VK_NUMPAD9
		{'*',		0		},	// 0x6a: VK_MULTIPLY
		{'+',		0		},	// 0x6b: VK_ADD
		{',',		0		},	// 0x6c: VK_SEPARATOR
		{'-',		0		},	// 0x6d: VK_SUBTRACT
		{'.',		0		},	// 0x6e: VK_DECIMAL
		{'/',		0		},	// 0x6f: VK_DIVIDE
		{0,			0		},	// 0x70: VK_F1
		{0,			0		},	// 0x71: VK_F2
		{0,			0		},	// 0x72: VK_F3
		{0,			0		},	// 0x73: VK_F4
		{0,			0		},	// 0x74: VK_F5
		{0,			0		},	// 0x75: VK_F6
		{0,			0		},	// 0x76: VK_F7
		{0,			0		},	// 0x77: VK_F8
		{0,			0		},	// 0x78: VK_F9
		{0,			0		},	// 0x79: VK_F10
		{0,			0		},	// 0x7a: VK_F11
		{0,			0		},	// 0x7b: VK_F12
		{0,			0		},	// 0x7c: VK_F13
		{0,			0		},	// 0x7d: VK_F14
		{0,			0		},	// 0x7e: VK_F15
		{0,			0		},	// 0x7f: VK_F16
		{0,			0		},	// 0x80: VK_F17
		{0,			0		},	// 0x81: VK_F18
		{0,			0		},	// 0x82: VK_F19
		{0,			0		},	// 0x83: VK_F20
		{0,			0		},	// 0x84: VK_F21
		{0,			0		},	// 0x85: VK_F22
		{0,			0		},	// 0x86: VK_F23
		{0,			0		},	// 0x87: VK_F24
		{0,			0		},	// 0x88
		{0,			0		},	// 0x89
		{0,			0		},	// 0x8a
		{0,			0		},	// 0x8b
		{0,			0		},	// 0x8c
		{0,			0		},	// 0x8d
		{0,			0		},	// 0x8e
		{0,			0		},	// 0x8f
		{0,			0		},	// 0x90: VK_NUMLOCK
		{0,			0		},	// 0x91: VK_SCROLL
		{0,			0		},	// 0x92
		{0,			0		},	// 0x93
		{0,			0		},	// 0x94
		{0,			0		},	// 0x95
		{0,			0		},	// 0x96
		{0,			0		},	// 0x97
		{0,			0		},	// 0x98
		{0,			0		},	// 0x99
		{0,			0		},	// 0x9a
		{0,			0		},	// 0x9b
		{0,			0		},	// 0x9c
		{0,			0		},	// 0x9d
		{0,			0		},	// 0x9e
		{0,			0		},	// 0x9f
		{0,			0		},	// 0xa0: VK_LSHIFT
		{0,			0		},	// 0xa1: VK_RSHIFT
		{0,			0		},	// 0xa2: VK_LCONTROL
		{0,			0		},	// 0xa3: VK_RCONTROL
		{0,			0		},	// 0xa4: VK_LMENU
		{0,			0		},	// 0xa5: VK_RMENU
		{0,			0		},	// 0xa6: VK_BROWSER_BACK
		{0,			0		},	// 0xa7: VK_BROWSER_FORWARD
		{0,			0		},	// 0xa8: VK_BROWSER_REFRESH
		{0,			0		},	// 0xa9: VK_BROWSER_STOP
		{0,			0		},	// 0xaa: VK_BROWSER_SEARCH
		{0,			0		},	// 0xab: VK_BROWSER_FAVORITES
		{0,			0		},	// 0xac: VK_BROWSER_HOME
		{0,			0		},	// 0xad: VK_VOLUME_MUTE
		{0,			0		},	// 0xae: VK_VOLUME_DOWN
		{0,			0		},	// 0xaf: VK_VOLUME_UP
		{0,			0		},	// 0xb0: VK_MEDIA_NEXT_TRACK
		{0,			0		},	// 0xb1: VK_MEDIA_PREV_TRACK
		{0,			0		},	// 0xb2: VK_MEDIA_STOP
		{0,			0		},	// 0xb3: VK_MEDIA_PLAY_PAUSE
		{0,			0		},	// 0xb4: VK_LAUNCH_MAIL
		{0,			0		},	// 0xb5: VK_LAUNCH_MEDIA_SELECT
		{0,			0		},	// 0xb6: VK_LAUNCH_APP1
		{0,			0		},	// 0xb7: VK_LAUNCH_APP2
		{0,			0		},	// 0xb8
		{0,			0		},	// 0xb9
		{';',		':'		},	// 0xba: VK_OEM_1
		{'=',		'+'		},	// 0xbb: VK_OEM_PLUS
		{',',		'<'		},	// 0xbc: VK_OEM_COMMA
		{'-',		'_'		},	// 0xbd: VK_OEM_MINUS
		{'.',		'>'		},	// 0xbe: VK_OEM_PERIOD
		{'/',		'?'		},	// 0xbf: VK_OEM_2
		{'`',		'~'		},	// 0xc0: VK_OEM_3
		{0,			0		},	// 0xc1
		{0,			0		},	// 0xc2
		{0,			0		},	// 0xc3
		{0,			0		},	// 0xc4
		{0,			0		},	// 0xc5
		{0,			0		},	// 0xc6
		{0,			0		},	// 0xc7
		{0,			0		},	// 0xc8
		{0,			0		},	// 0xc9
		{0,			0		},	// 0xca
		{0,			0		},	// 0xcb
		{0,			0		},	// 0xcc
		{0,			0		},	// 0xcd
		{0,			0		},	// 0xce
		{0,			0		},	// 0xcf
		{0,			0		},	// 0xd0
		{0,			0		},	// 0xd1
		{0,			0		},	// 0xd2
		{0,			0		},	// 0xd3
		{0,			0		},	// 0xd4
		{0,			0		},	// 0xd5
		{0,			0		},	// 0xd6
		{0,			0		},	// 0xd7
		{0,			0		},	// 0xd8
		{0,			0		},	// 0xd9
		{0,			0		},	// 0xda
		{'[',		'{'		},	// 0xdb: VK_OEM_4
		{'\\',		'|'		},	// 0xdc: VK_OEM_5
		{']',		'}'		},	// 0xdd: VK_OEM_6
		{'\'',		'"'		},	// 0xde: VK_OEM_7
		{0,			0		},	// 0xdf: VK_OEM_8
		{0,			0		},	// 0xe0
		{0,			0		},	// 0xe1
		{'\\',		'_'		},	// 0xe2: VK_OEM_102
		{0,			0		},	// 0xe3
		{0,			0		},	// 0xe4
		{0,			0		},	// 0xe5: VK_PROCESSKEY
		{0,			0		},	// 0xe6
		{0,			0		},	// 0xe7: VK_PACKET
		{0,			0		},	// 0xe8
		{0,			0		},	// 0xe9
		{0,			0		},	// 0xea
		{0,			0		},	// 0xeb
		{0,			0		},	// 0xec
		{0,			0		},	// 0xed
		{0,			0		},	// 0xee
		{0,			0		},	// 0xef
		{0,			0		},	// 0xf0
		{0,			0		},	// 0xf1
		{0,			0		},	// 0xf2
		{0,			0		},	// 0xf3
		{0,			0		},	// 0xf4
		{0,			0		},	// 0xf5
		{0,			0		},	// 0xf6: VK_ATTN
		{0,			0		},	// 0xf7: VK_CRSEL
		{0,			0		},	// 0xf8: VK_EXSEL
		{0,			0		},	// 0xf9: VK_EREOF
		{0,			0		},	// 0xfa: VK_PLAY
		{0,			0		},	// 0xfb: VK_ZOOM
		{0,			0		},	// 0xfc: VK_NONAME
		{0,			0		},	// 0xfd: VK_PA1
		{0,			0		},	// 0xfe: VK_OEM_CLEAR
		{0,			0		},	// 0xff
	};
	return charEntryTbl;
}

//------------------------------------------------------------------------------
// KeyLayout_109
//------------------------------------------------------------------------------
const KeyLayout_109 KeyLayout_109::Instance;

const KeyLayout::CharEntry* KeyLayout_109::GetCharEntryTbl() const
{
	static const CharEntry charEntryTbl[] = {
		{0,			0		},	// 0x00			
		{0,			0		},	// 0x01: VK_LBUTTON		
		{0,			0		},	// 0x02: VK_RBUTTON		
		{0,			0		},	// 0x03: VK_CANCEL			
		{0,			0		},	// 0x04: VK_MBUTTON		
		{0,			0		},	// 0x05: VK_XBUTTON1		
		{0,			0		},	// 0x06: VK_XBUTTON2		
		{0,			0		},	// 0x07			
		{'\b',		'\b'	},	// 0x08: VK_BACK			
		{'\t',		'\t'	},	// 0x09: VK_TAB			
		{0,			0		},	// 0x0a			
		{0,			0		},	// 0x0b
		{0,			0		},	// 0x0c: VK_CLEAR
		{'\r',		'\r'	},	// 0x0d: VK_RETURN
		{0,			0		},	// 0x0e
		{0,			0		},	// 0x0f
		{0,			0		},	// 0x10: VK_SHIFT
		{0,			0		},	// 0x11: VK_CONTROL
		{0,			0		},	// 0x12: VK_MENU
		{0,			0		},	// 0x13: VK_PAUSE
		{0,			0		},	// 0x14: VK_CAPITAL
		{0,			0		},	// 0x15: VK_KANA, VK_HANGUL
		{0,			0		},	// 0x16: VK_IME_ON
		{0,			0		},	// 0x17: VK_JUNJA
		{0,			0		},	// 0x18: VK_FINAL
		{0,			0		},	// 0x19: VK_KANJI
		{0,			0		},	// 0x1a
		{'\x1b',	'\x1b'	},	// 0x1b: VK_ESCAPE
		{0,			0		},	// 0x1c: VK_CONVERT
		{0,			0		},	// 0x1d: VK_NONCONVERT
		{0,			0		},	// 0x1e: VK_ACCEPT
		{0,			0		},	// 0x1f: VK_MODECHANGE
		{' ',		' '		},	// 0x20: VK_SPACE
		{0,			0		},	// 0x21: VK_PRIOR
		{0,			0		},	// 0x22: VK_NEXT
		{0,			0		},	// 0x23: VK_END
		{0,			0		},	// 0x24: VK_HOME
		{0,			0		},	// 0x25: VK_LEFT
		{0,			0		},	// 0x26: VK_UP
		{0,			0		},	// 0x27: VK_RIGHT
		{0,			0		},	// 0x28: VK_DOWN
		{0,			0		},	// 0x29: VK_SELECT
		{0,			0		},	// 0x2a: VK_PRINT
		{0,			0		},	// 0x2b: VK_EXECUTE
		{0,			0		},	// 0x2c: VK_SNAPSHOT
		{0,			0		},	// 0x2d: VK_INSERT
		{0,			0		},	// 0x2e: VK_DELETE
		{0,			0		},	// 0x2f: VK_HELP
		{'0',		0	 	},	// 0x30: '0'
		{'1',		'!' 	},	// 0x31: '1'
		{'2',		'\"' 	},	// 0x32: '2'
		{'3',		'#' 	},	// 0x33: '3'
		{'4',		'$' 	},	// 0x34: '4'
		{'5',		'%' 	},	// 0x35: '5'
		{'6',		'&' 	},	// 0x36: '6'
		{'7',		'\'' 	},	// 0x37: '7'
		{'8',		'(' 	},	// 0x38: '8'
		{'9',		')' 	},	// 0x39: '9'
		{0,			0		},	// 0x3a
		{0,			0		},	// 0x3b
		{0,			0		},	// 0x3c
		{0,			0		},	// 0x3d
		{0,			0		},	// 0x3e
		{0,			0		},	// 0x3f
		{0,			0		},	// 0x40
		{'a',		'A' 	},	// 0x41: 'A'
		{'b',		'B' 	},	// 0x42: 'B'
		{'c',		'C' 	},	// 0x43: 'C'
		{'d',		'D' 	},	// 0x44: 'D'
		{'e',		'E' 	},	// 0x45: 'E'
		{'f',		'F' 	},	// 0x46: 'F'
		{'g',		'G' 	},	// 0x47: 'G'
		{'h',		'H' 	},	// 0x48: 'H'
		{'i',		'I' 	},	// 0x49: 'I'
		{'j',		'J' 	},	// 0x4a: 'J'
		{'k',		'K' 	},	// 0x4b: 'K'
		{'l',		'L' 	},	// 0x4c: 'L'
		{'m',		'M' 	},	// 0x4d: 'M'
		{'n',		'N' 	},	// 0x4e: 'N'
		{'o',		'O' 	},	// 0x4f: 'O'
		{'p',		'P' 	},	// 0x50: 'P'
		{'q',		'Q' 	},	// 0x51: 'Q'
		{'r',		'R' 	},	// 0x52: 'R'
		{'s',		'S' 	},	// 0x53: 'S'
		{'t',		'T' 	},	// 0x54: 'T'
		{'u',		'U' 	},	// 0x55: 'U'
		{'v',		'V' 	},	// 0x56: 'V'
		{'w',		'W' 	},	// 0x57: 'W'
		{'x',		'X' 	},	// 0x58: 'X'
		{'y',		'Y' 	},	// 0x59: 'Y'
		{'z',		'Z' 	},	// 0x5a: 'Z'
		{0,			0		},	// 0x5b: VK_LWIN
		{0,			0		},	// 0x5c: VK_RWIN
		{0,			0		},	// 0x5d: VK_APPS
		{0,			0		},	// 0x5e
		{0,			0		},	// 0x5f: VK_SLEEP
		{'0',		0		},	// 0x60: VK_NUMPAD0
		{'1',		0		},	// 0x61: VK_NUMPAD1
		{'2',		0		},	// 0x62: VK_NUMPAD2
		{'3',		0		},	// 0x63: VK_NUMPAD3
		{'4',		0		},	// 0x64: VK_NUMPAD4
		{'5',		0		},	// 0x65: VK_NUMPAD5
		{'6',		0		},	// 0x66: VK_NUMPAD6
		{'7',		0		},	// 0x67: VK_NUMPAD7
		{'8',		0		},	// 0x68: VK_NUMPAD8
		{'9',		0		},	// 0x69: VK_NUMPAD9
		{'*',		0		},	// 0x6a: VK_MULTIPLY
		{'+',		0		},	// 0x6b: VK_ADD
		{',',		0		},	// 0x6c: VK_SEPARATOR
		{'-',		0		},	// 0x6d: VK_SUBTRACT
		{'.',		0		},	// 0x6e: VK_DECIMAL
		{'/',		0		},	// 0x6f: VK_DIVIDE
		{0,			0		},	// 0x70: VK_F1
		{0,			0		},	// 0x71: VK_F2
		{0,			0		},	// 0x72: VK_F3
		{0,			0		},	// 0x73: VK_F4
		{0,			0		},	// 0x74: VK_F5
		{0,			0		},	// 0x75: VK_F6
		{0,			0		},	// 0x76: VK_F7
		{0,			0		},	// 0x77: VK_F8
		{0,			0		},	// 0x78: VK_F9
		{0,			0		},	// 0x79: VK_F10
		{0,			0		},	// 0x7a: VK_F11
		{0,			0		},	// 0x7b: VK_F12
		{0,			0		},	// 0x7c: VK_F13
		{0,			0		},	// 0x7d: VK_F14
		{0,			0		},	// 0x7e: VK_F15
		{0,			0		},	// 0x7f: VK_F16
		{0,			0		},	// 0x80: VK_F17
		{0,			0		},	// 0x81: VK_F18
		{0,			0		},	// 0x82: VK_F19
		{0,			0		},	// 0x83: VK_F20
		{0,			0		},	// 0x84: VK_F21
		{0,			0		},	// 0x85: VK_F22
		{0,			0		},	// 0x86: VK_F23
		{0,			0		},	// 0x87: VK_F24
		{0,			0		},	// 0x88
		{0,			0		},	// 0x89
		{0,			0		},	// 0x8a
		{0,			0		},	// 0x8b
		{0,			0		},	// 0x8c
		{0,			0		},	// 0x8d
		{0,			0		},	// 0x8e
		{0,			0		},	// 0x8f
		{0,			0		},	// 0x90: VK_NUMLOCK
		{0,			0		},	// 0x91: VK_SCROLL
		{0,			0		},	// 0x92
		{0,			0		},	// 0x93
		{0,			0		},	// 0x94
		{0,			0		},	// 0x95
		{0,			0		},	// 0x96
		{0,			0		},	// 0x97
		{0,			0		},	// 0x98
		{0,			0		},	// 0x99
		{0,			0		},	// 0x9a
		{0,			0		},	// 0x9b
		{0,			0		},	// 0x9c
		{0,			0		},	// 0x9d
		{0,			0		},	// 0x9e
		{0,			0		},	// 0x9f
		{0,			0		},	// 0xa0: VK_LSHIFT
		{0,			0		},	// 0xa1: VK_RSHIFT
		{0,			0		},	// 0xa2: VK_LCONTROL
		{0,			0		},	// 0xa3: VK_RCONTROL
		{0,			0		},	// 0xa4: VK_LMENU
		{0,			0		},	// 0xa5: VK_RMENU
		{0,			0		},	// 0xa6: VK_BROWSER_BACK
		{0,			0		},	// 0xa7: VK_BROWSER_FORWARD
		{0,			0		},	// 0xa8: VK_BROWSER_REFRESH
		{0,			0		},	// 0xa9: VK_BROWSER_STOP
		{0,			0		},	// 0xaa: VK_BROWSER_SEARCH
		{0,			0		},	// 0xab: VK_BROWSER_FAVORITES
		{0,			0		},	// 0xac: VK_BROWSER_HOME
		{0,			0		},	// 0xad: VK_VOLUME_MUTE
		{0,			0		},	// 0xae: VK_VOLUME_DOWN
		{0,			0		},	// 0xaf: VK_VOLUME_UP
		{0,			0		},	// 0xb0: VK_MEDIA_NEXT_TRACK
		{0,			0		},	// 0xb1: VK_MEDIA_PREV_TRACK
		{0,			0		},	// 0xb2: VK_MEDIA_STOP
		{0,			0		},	// 0xb3: VK_MEDIA_PLAY_PAUSE
		{0,			0		},	// 0xb4: VK_LAUNCH_MAIL
		{0,			0		},	// 0xb5: VK_LAUNCH_MEDIA_SELECT
		{0,			0		},	// 0xb6: VK_LAUNCH_APP1
		{0,			0		},	// 0xb7: VK_LAUNCH_APP2
		{0,			0		},	// 0xb8
		{0,			0		},	// 0xb9
		{':',		'*'		},	// 0xba: VK_OEM_1
		{';',		'+'		},	// 0xbb: VK_OEM_PLUS
		{',',		'<'		},	// 0xbc: VK_OEM_COMMA
		{'-',		'='		},	// 0xbd: VK_OEM_MINUS
		{'.',		'>'		},	// 0xbe: VK_OEM_PERIOD
		{'/',		'?'		},	// 0xbf: VK_OEM_2
		{'@',		'`'		},	// 0xc0: VK_OEM_3
		{0,			0		},	// 0xc1
		{0,			0		},	// 0xc2
		{0,			0		},	// 0xc3
		{0,			0		},	// 0xc4
		{0,			0		},	// 0xc5
		{0,			0		},	// 0xc6
		{0,			0		},	// 0xc7
		{0,			0		},	// 0xc8
		{0,			0		},	// 0xc9
		{0,			0		},	// 0xca
		{0,			0		},	// 0xcb
		{0,			0		},	// 0xcc
		{0,			0		},	// 0xcd
		{0,			0		},	// 0xce
		{0,			0		},	// 0xcf
		{0,			0		},	// 0xd0
		{0,			0		},	// 0xd1
		{0,			0		},	// 0xd2
		{0,			0		},	// 0xd3
		{0,			0		},	// 0xd4
		{0,			0		},	// 0xd5
		{0,			0		},	// 0xd6
		{0,			0		},	// 0xd7
		{0,			0		},	// 0xd8
		{0,			0		},	// 0xd9
		{0,			0		},	// 0xda
		{'[',		'{'		},	// 0xdb: VK_OEM_4
		{'\\',		'|'		},	// 0xdc: VK_OEM_5
		{']',		'}'		},	// 0xdd: VK_OEM_6
		{'^',		'~'		},	// 0xde: VK_OEM_7
		{0,			0		},	// 0xdf: VK_OEM_8
		{0,			0		},	// 0xe0
		{0,			0		},	// 0xe1
		{'\\',		'_'		},	// 0xe2: VK_OEM_102
		{0,			0		},	// 0xe3
		{0,			0		},	// 0xe4
		{0,			0		},	// 0xe5: VK_PROCESSKEY
		{0,			0		},	// 0xe6
		{0,			0		},	// 0xe7: VK_PACKET
		{0,			0		},	// 0xe8
		{0,			0		},	// 0xe9
		{0,			0		},	// 0xea
		{0,			0		},	// 0xeb
		{0,			0		},	// 0xec
		{0,			0		},	// 0xed
		{0,			0		},	// 0xee
		{0,			0		},	// 0xef
		{0,			0		},	// 0xf0
		{0,			0		},	// 0xf1
		{0,			0		},	// 0xf2
		{0,			0		},	// 0xf3
		{0,			0		},	// 0xf4
		{0,			0		},	// 0xf5
		{0,			0		},	// 0xf6: VK_ATTN
		{0,			0		},	// 0xf7: VK_CRSEL
		{0,			0		},	// 0xf8: VK_EXSEL
		{0,			0		},	// 0xf9: VK_EREOF
		{0,			0		},	// 0xfa: VK_PLAY
		{0,			0		},	// 0xfb: VK_ZOOM
		{0,			0		},	// 0xfc: VK_NONAME
		{0,			0		},	// 0xfd: VK_PA1
		{0,			0		},	// 0xfe: VK_OEM_CLEAR
		{0,			0		},	// 0xff
	};
	return charEntryTbl;
}

/*
const USBHost::Keyboard::ConvEntry USBHost::Keyboard::convEntryTbl_101Keyboard[256] = {
	{0,				0,			0,			0x00}, // 0x00
	{0,				0,			0,			0x00}, // 0x01
	{0,				0,			0,			0x00}, // 0x02
	{0,				0,			0,			0x00}, // 0x03
	{'A',			'a',		'A',		0x01}, // 0x04
	{'B',			'b',		'B',		0x02}, // 0x05
	{'C',			'c',		'C',		0x03}, // 0x06
	{'D',			'd',		'D',		0x04}, // 0x07
	{'E',			'e',		'E',		0x05}, // 0x08
	{'F',			'f',		'F',		0x06}, // 0x09
	{'G',			'g',		'G',		0x07}, // 0x0a
	{'H',			'h',		'H',		0x08}, // 0x0b
	{'I',			'i',		'I',		0x09}, // 0x0c
	{'J',			'j',		'J',		0x0a}, // 0x0d
	{'K',			'k',		'K',		0x0b}, // 0x0e
	{'L',			'l',		'L',		0x0c}, // 0x0f
	{'M',			'm',		'M',		0x0d}, // 0x10
	{'N',			'n',		'N',		0x0e}, // 0x11
	{'O',			'o',		'O',		0x0f}, // 0x12
	{'P',			'p',		'P',		0x10}, // 0x13
	{'Q',			'q',		'Q',		0x11}, // 0x14
	{'R',			'r',		'R',		0x12}, // 0x15
	{'S',			's',		'S',		0x13}, // 0x16
	{'T',			't',		'T',		0x14}, // 0x17
	{'U',			'u',		'U',		0x15}, // 0x18
	{'V',			'v',		'V',		0x16}, // 0x19
	{'W',			'w',		'W',		0x17}, // 0x1a
	{'X',			'x',		'X',		0x18}, // 0x1b
	{'Y',			'y',		'Y',		0x19}, // 0x1c
	{'Z',			'z',		'Z',		0x1a}, // 0x1d
	{'1',			'1',		'!',		0x00}, // 0x1e
	{'2',			'2',		'@',		0x00}, // 0x1f
	{'3',			'3',		'#',		0x00}, // 0x20
	{'4',			'4',		'$',		0x00}, // 0x21
	{'5',			'5',		'%',		0x00}, // 0x22
	{'6',			'6',		'^',		0x00}, // 0x23
	{'7',			'7',		'&',		0x00}, // 0x24
	{'8',			'8',		'*',		0x00}, // 0x25
	{'9',			'9',		'(',		0x00}, // 0x26
	{'0',			'0',		')',		0x00}, // 0x27
	{VK_RETURN,		'\r',		'\r',		0x00}, // 0x28
	{VK_ESCAPE,		'\x1b',		'\x1b',		0x00}, // 0x29
	{VK_BACK,		'\b',		'\b',		0x00}, // 0x2a
	{VK_TAB,		'\t',		'\t',		0x00}, // 0x2b
	{VK_SPACE,		' ',		' ',		0x00}, // 0x2c
	{VK_OEM_MINUS,	'-',		'_',		0x00}, // 0x2d
	{VK_OEM_PLUS,	'=',		'+',		0x00}, // 0x2e
	{VK_OEM_4,		'[',		'{',		0x00}, // 0x2f
	{VK_OEM_6,		']',		'}',		0x00}, // 0x30
	{VK_OEM_5,		'\\',		'|',		0x00}, // 0x31
	{VK_OEM_3,		'#',		'~',		0x00}, // 0x32
	{VK_OEM_1,		';',		':',		0x00}, // 0x33
	{VK_OEM_7,		'\'',		'\"',		0x00}, // 0x34
	{VK_OEM_3,		'`',		'~',		0x00}, // 0x35
	{VK_OEM_COMMA,	',',		'<',		0x00}, // 0x36
	{VK_OEM_PERIOD,	'.',		'>',		0x00}, // 0x37
	{VK_OEM_2,		'/',		'?',		0x00}, // 0x38
	{VK_CAPITAL,	0,			0,			0x00}, // 0x39
	{VK_F1,			0,			0,			0x00}, // 0x3a
	{VK_F2,			0,			0,			0x00}, // 0x3b
	{VK_F3,			0,			0,			0x00}, // 0x3c
	{VK_F4,			0,			0,			0x00}, // 0x3d
	{VK_F5,			0,			0,			0x00}, // 0x3e
	{VK_F6,			0,			0,			0x00}, // 0x3f
	{VK_F7,			0,			0,			0x00}, // 0x40
	{VK_F8,			0,			0,			0x00}, // 0x41
	{VK_F9,			0,			0,			0x00}, // 0x42
	{VK_F10,		0,			0,			0x00}, // 0x43
	{VK_F11,		0,			0,			0x00}, // 0x44
	{VK_F12,		0,			0,			0x00}, // 0x45
	{VK_PRINT,		0,			0,			0x00}, // 0x46
	{VK_SCROLL,		0,			0,			0x00}, // 0x47
	{VK_PAUSE,		0,			0,			0x00}, // 0x48
	{VK_INSERT,		0,			0,			0x00}, // 0x49
	{VK_HOME,		0,			0,			0x00}, // 0x4a
	{VK_PRIOR,		0,			0,			0x00}, // 0x4b
	{VK_DELETE,		0,			0,			0x00}, // 0x4c
	{VK_END,		0,			0,			0x00}, // 0x4d
	{VK_NEXT,		0,			0,			0x00}, // 0x4e
	{VK_RIGHT,		0,			0,			0x00}, // 0x4f
	{VK_LEFT,		0,			0,			0x00}, // 0x50
	{VK_DOWN,		0,			0,			0x00}, // 0x51
	{VK_UP,			0,			0,			0x00}, // 0x52
	{VK_NUMLOCK,	0,			0,			0x00}, // 0x53
	{VK_DIVIDE,		'/',		'/',		0x00}, // 0x54
	{VK_MULTIPLY,	'*',		'*',		0x00}, // 0x55
	{VK_SUBTRACT,	'-',		'-',		0x00}, // 0x56
	{VK_ADD,		'+',		'+',		0x00}, // 0x57
	{VK_RETURN,		'\r',		'\r',		0x00}, // 0x58
	{VK_NUMPAD1,	'1',		'1',		0x00}, // 0x59
	{VK_NUMPAD2,	'2',		'2',		0x00}, // 0x5a
	{VK_NUMPAD3,	'3',		'3',		0x00}, // 0x5b
	{VK_NUMPAD4,	'4',		'4',		0x00}, // 0x5c
	{VK_NUMPAD5,	'5',		'5',		0x00}, // 0x5d
	{VK_NUMPAD6,	'6',		'6',		0x00}, // 0x5e
	{VK_NUMPAD7,	'7',		'7',		0x00}, // 0x5f
	{VK_NUMPAD8,	'8',		'8',		0x00}, // 0x60
	{VK_NUMPAD9,	'9',		'9',		0x00}, // 0x61
	{VK_NUMPAD0,	'0',		'0',		0x00}, // 0x62
	{VK_DECIMAL,	'.',		'.',		0x00}, // 0x63
	{0,				0,			0,			0x00}, // 0x64
	{0,				0,			0,			0x00}, // 0x65
	{0,				0,			0,			0x00}, // 0x66
	{0,				'=',		'=',		0x00}, // 0x67
	{0,				0,			0,			0x00}, // 0x68
	{0,				0,			0,			0x00}, // 0x69
	{0,				0,			0,			0x00}, // 0x6a
	{0,				0,			0,			0x00}, // 0x6b
	{0,				0,			0,			0x00}, // 0x6c
	{0,				0,			0,			0x00}, // 0x6d
	{0,				0,			0,			0x00}, // 0x6e
	{0,				0,			0,			0x00}, // 0x6f
	{0,				0,			0,			0x00}, // 0x70
	{0,				0,			0,			0x00}, // 0x71
	{0,				0,			0,			0x00}, // 0x72
	{0,				0,			0,			0x00}, // 0x73
	{0,				0,			0,			0x00}, // 0x74
	{0,				0,			0,			0x00}, // 0x75
	{0,				0,			0,			0x00}, // 0x76
	{0,				0,			0,			0x00}, // 0x77
	{0,				0,			0,			0x00}, // 0x78
	{0,				0,			0,			0x00}, // 0x79
	{0,				0,			0,			0x00}, // 0x7a
	{0,				0,			0,			0x00}, // 0x7b
	{0,				0,			0,			0x00}, // 0x7c
	{0,				0,			0,			0x00}, // 0x7d
	{0,				0,			0,			0x00}, // 0x7e
	{0,				0,			0,			0x00}, // 0x7f
	{0,				0,			0,			0x00}, // 0x80
	{0,				0,			0,			0x00}, // 0x81
	{0,				0,			0,			0x00}, // 0x82
	{0,				0,			0,			0x00}, // 0x83
	{0,				0,			0,			0x00}, // 0x84
	{0,				0,			0,			0x00}, // 0x85
	{0,				0,			0,			0x00}, // 0x86
	{0,				0,			0,			0x00}, // 0x87
	{0,				0,			0,			0x00}, // 0x88
	{0,				0,			0,			0x00}, // 0x89
	{0,				0,			0,			0x00}, // 0x8a
	{0,				0,			0,			0x00}, // 0x8b
	{0,				0,			0,			0x00}, // 0x8c
	{0,				0,			0,			0x00}, // 0x8d
	{0,				0,			0,			0x00}, // 0x8e
	{0,				0,			0,			0x00}, // 0x8f
	{0,				0,			0,			0x00}, // 0x90
	{0,				0,			0,			0x00}, // 0x91
	{0,				0,			0,			0x00}, // 0x92
	{0,				0,			0,			0x00}, // 0x93
	{0,				0,			0,			0x00}, // 0x94
	{0,				0,			0,			0x00}, // 0x95
	{0,				0,			0,			0x00}, // 0x96
	{0,				0,			0,			0x00}, // 0x97
	{0,				0,			0,			0x00}, // 0x98
	{0,				0,			0,			0x00}, // 0x99
	{0,				0,			0,			0x00}, // 0x9a
	{0,				0,			0,			0x00}, // 0x9b
	{0,				0,			0,			0x00}, // 0x9c
	{0,				0,			0,			0x00}, // 0x9d
	{0,				0,			0,			0x00}, // 0x9e
	{0,				0,			0,			0x00}, // 0x9f
	{0,				0,			0,			0x00}, // 0xa0
	{0,				0,			0,			0x00}, // 0xa1
	{0,				0,			0,			0x00}, // 0xa2
	{0,				0,			0,			0x00}, // 0xa3
	{0,				0,			0,			0x00}, // 0xa4
	{0,				0,			0,			0x00}, // 0xa5
	{0,				0,			0,			0x00}, // 0xa6
	{0,				0,			0,			0x00}, // 0xa7
	{0,				0,			0,			0x00}, // 0xa8
	{0,				0,			0,			0x00}, // 0xa9
	{0,				0,			0,			0x00}, // 0xaa
	{0,				0,			0,			0x00}, // 0xab
	{0,				0,			0,			0x00}, // 0xac
	{0,				0,			0,			0x00}, // 0xad
	{0,				0,			0,			0x00}, // 0xae
	{0,				0,			0,			0x00}, // 0xaf
	{0,				0,			0,			0x00}, // 0xb0
	{0,				0,			0,			0x00}, // 0xb1
	{0,				0,			0,			0x00}, // 0xb2
	{0,				0,			0,			0x00}, // 0xb3
	{0,				0,			0,			0x00}, // 0xb4
	{0,				0,			0,			0x00}, // 0xb5
	{0,				0,			0,			0x00}, // 0xb6
	{0,				0,			0,			0x00}, // 0xb7
	{0,				0,			0,			0x00}, // 0xb8
	{0,				0,			0,			0x00}, // 0xb9
	{0,				0,			0,			0x00}, // 0xba
	{0,				0,			0,			0x00}, // 0xbb
	{0,				0,			0,			0x00}, // 0xbc
	{0,				0,			0,			0x00}, // 0xbd
	{0,				0,			0,			0x00}, // 0xbe
	{0,				0,			0,			0x00}, // 0xbf
	{0,				0,			0,			0x00}, // 0xc0
	{0,				0,			0,			0x00}, // 0xc1
	{0,				0,			0,			0x00}, // 0xc2
	{0,				0,			0,			0x00}, // 0xc3
	{0,				0,			0,			0x00}, // 0xc4
	{0,				0,			0,			0x00}, // 0xc5
	{0,				0,			0,			0x00}, // 0xc6
	{0,				0,			0,			0x00}, // 0xc7
	{0,				0,			0,			0x00}, // 0xc8
	{0,				0,			0,			0x00}, // 0xc9
	{0,				0,			0,			0x00}, // 0xca
	{0,				0,			0,			0x00}, // 0xcb
	{0,				0,			0,			0x00}, // 0xcc
	{0,				0,			0,			0x00}, // 0xcd
	{0,				0,			0,			0x00}, // 0xce
	{0,				0,			0,			0x00}, // 0xcf
	{0,				0,			0,			0x00}, // 0xd0
	{0,				0,			0,			0x00}, // 0xd1
	{0,				0,			0,			0x00}, // 0xd2
	{0,				0,			0,			0x00}, // 0xd3
	{0,				0,			0,			0x00}, // 0xd4
	{0,				0,			0,			0x00}, // 0xd5
	{0,				0,			0,			0x00}, // 0xd6
	{0,				0,			0,			0x00}, // 0xd7
	{0,				0,			0,			0x00}, // 0xd8
	{0,				0,			0,			0x00}, // 0xd9
	{0,				0,			0,			0x00}, // 0xda
	{0,				0,			0,			0x00}, // 0xdb
	{0,				0,			0,			0x00}, // 0xdc
	{0,				0,			0,			0x00}, // 0xdd
	{0,				0,			0,			0x00}, // 0xde
	{0,				0,			0,			0x00}, // 0xdf
	{0,				0,			0,			0x00}, // 0xe0
	{0,				0,			0,			0x00}, // 0xe1
	{0,				0,			0,			0x00}, // 0xe2
	{0,				0,			0,			0x00}, // 0xe3
	{0,				0,			0,			0x00}, // 0xe4
	{0,				0,			0,			0x00}, // 0xe5
	{0,				0,			0,			0x00}, // 0xe6
	{0,				0,			0,			0x00}, // 0xe7
	{0,				0,			0,			0x00}, // 0xe8
	{0,				0,			0,			0x00}, // 0xe9
	{0,				0,			0,			0x00}, // 0xea
	{0,				0,			0,			0x00}, // 0xeb
	{0,				0,			0,			0x00}, // 0xec
	{0,				0,			0,			0x00}, // 0xed
	{0,				0,			0,			0x00}, // 0xee
	{0,				0,			0,			0x00}, // 0xef
	{0,				0,			0,			0x00}, // 0xf0
	{0,				0,			0,			0x00}, // 0xf1
	{0,				0,			0,			0x00}, // 0xf2
	{0,				0,			0,			0x00}, // 0xf3
	{0,				0,			0,			0x00}, // 0xf4
	{0,				0,			0,			0x00}, // 0xf5
	{0,				0,			0,			0x00}, // 0xf6
	{0,				0,			0,			0x00}, // 0xf7
	{0,				0,			0,			0x00}, // 0xf8
	{0,				0,			0,			0x00}, // 0xf9
	{0,				0,			0,			0x00}, // 0xfa
	{0,				0,			0,			0x00}, // 0xfb
	{0,				0,			0,			0x00}, // 0xfc
	{0,				0,			0,			0x00}, // 0xfd
	{0,				0,			0,			0x00}, // 0xfe
	{0,				0,			0,			0x00}, // 0xff
};

const USBHost::Keyboard::ConvEntry USBHost::Keyboard::convEntryTbl_106Keyboard[256] = {
	{0,				0,			0,			0x00}, // 0x00
	{0,				0,			0,			0x00}, // 0x01
	{0,				0,			0,			0x00}, // 0x02
	{0,				0,			0,			0x00}, // 0x03
	{'A',			'a',		'A',		0x01}, // 0x04
	{'B',			'b',		'B',		0x02}, // 0x05
	{'C',			'c',		'C',		0x03}, // 0x06
	{'D',			'd',		'D',		0x04}, // 0x07
	{'E',			'e',		'E',		0x05}, // 0x08
	{'F',			'f',		'F',		0x06}, // 0x09
	{'G',			'g',		'G',		0x07}, // 0x0a
	{'H',			'h',		'H',		0x08}, // 0x0b
	{'I',			'i',		'I',		0x09}, // 0x0c
	{'J',			'j',		'J',		0x0a}, // 0x0d
	{'K',			'k',		'K',		0x0b}, // 0x0e
	{'L',			'l',		'L',		0x0c}, // 0x0f
	{'M',			'm',		'M',		0x0d}, // 0x10
	{'N',			'n',		'N',		0x0e}, // 0x11
	{'O',			'o',		'O',		0x0f}, // 0x12
	{'P',			'p',		'P',		0x10}, // 0x13
	{'Q',			'q',		'Q',		0x11}, // 0x14
	{'R',			'r',		'R',		0x12}, // 0x15
	{'S',			's',		'S',		0x13}, // 0x16
	{'T',			't',		'T',		0x14}, // 0x17
	{'U',			'u',		'U',		0x15}, // 0x18
	{'V',			'v',		'V',		0x16}, // 0x19
	{'W',			'w',		'W',		0x17}, // 0x1a
	{'X',			'x',		'X',		0x18}, // 0x1b
	{'Y',			'y',		'Y',		0x19}, // 0x1c
	{'Z',			'z',		'Z',		0x1a}, // 0x1d
	{'1',			'1',		'!',		0x00}, // 0x1e
	{'2',			'2',		'\"',		0x00}, // 0x1f
	{'3',			'3',		'#',		0x00}, // 0x20
	{'4',			'4',		'$',		0x00}, // 0x21
	{'5',			'5',		'%',		0x00}, // 0x22
	{'6',			'6',		'&',		0x00}, // 0x23
	{'7',			'7',		'\'',		0x00}, // 0x24
	{'8',			'8',		'(',		0x00}, // 0x25
	{'9',			'9',		')',		0x00}, // 0x26
	{'0',			'0',		'0',		0x00}, // 0x27
	{VK_RETURN,		0,			0,			0x00}, // 0x28
	{VK_ESCAPE,		'\x1b',		'\x1b',		0x00}, // 0x29
	{VK_BACK,		0,			0,			0x00}, // 0x2a
	{VK_TAB,		'\t',		'\t',		0x00}, // 0x2b
	{VK_SPACE,		' ',		' ',		0x00}, // 0x2c
	{VK_OEM_MINUS,	'-',		'=',		0x00}, // 0x2d
	{VK_OEM_PLUS,	'^',		'~',		0x00}, // 0x2e
	{VK_OEM_4,		'@',		'`',		0x00}, // 0x2f
	{VK_OEM_6,		'[',		'{',		0x00}, // 0x30
	{VK_OEM_5,		'\\',		'|',		0x00}, // 0x31
	{VK_OEM_3,		']',		'}',		0x00}, // 0x32
	{VK_OEM_1,		';',		'+',		0x00}, // 0x33
	{VK_OEM_7,		':',		'*',		0x00}, // 0x34
	{VK_OEM_3,		'`',		'~',		0x00}, // 0x35
	{VK_OEM_COMMA,	',',		'<',		0x00}, // 0x36
	{VK_OEM_PERIOD,	'.',		'>',		0x00}, // 0x37
	{VK_OEM_2,		'/',		'?',		0x00}, // 0x38
	{VK_CAPITAL,	0,			0,			0x00}, // 0x39
	{VK_F1,			0,			0,			0x00}, // 0x3a
	{VK_F2,			0,			0,			0x00}, // 0x3b
	{VK_F3,			0,			0,			0x00}, // 0x3c
	{VK_F4,			0,			0,			0x00}, // 0x3d
	{VK_F5,			0,			0,			0x00}, // 0x3e
	{VK_F6,			0,			0,			0x00}, // 0x3f
	{VK_F7,			0,			0,			0x00}, // 0x40
	{VK_F8,			0,			0,			0x00}, // 0x41
	{VK_F9,			0,			0,			0x00}, // 0x42
	{VK_F10,		0,			0,			0x00}, // 0x43
	{VK_F11,		0,			0,			0x00}, // 0x44
	{VK_F12,		0,			0,			0x00}, // 0x45
	{VK_PRINT,		0,			0,			0x00}, // 0x46
	{VK_SCROLL,		0,			0,			0x00}, // 0x47
	{VK_PAUSE,		0,			0,			0x00}, // 0x48
	{VK_INSERT,		0,			0,			0x00}, // 0x49
	{VK_HOME,		0,			0,			0x00}, // 0x4a
	{VK_PRIOR,		0,			0,			0x00}, // 0x4b
	{VK_DELETE,		0,			0,			0x00}, // 0x4c
	{VK_END,		0,			0,			0x00}, // 0x4d
	{VK_NEXT,		0,			0,			0x00}, // 0x4e
	{VK_RIGHT,		0,			0,			0x00}, // 0x4f
	{VK_LEFT,		0,			0,			0x00}, // 0x50
	{VK_DOWN,		0,			0,			0x00}, // 0x51
	{VK_UP,			0,			0,			0x00}, // 0x52
	{VK_NUMLOCK,	0,			0,			0x00}, // 0x53
	{VK_DIVIDE,		'/',		'/',		0x00}, // 0x54
	{VK_MULTIPLY,	'*',		'*',		0x00}, // 0x55
	{VK_SUBTRACT,	'-',		'-',		0x00}, // 0x56
	{VK_ADD,		'+',		'+',		0x00}, // 0x57
	{VK_RETURN,		0,			0,			0x00}, // 0x58
	{VK_NUMPAD1,	'1',		0,			0x00}, // 0x59
	{VK_NUMPAD2,	'2',		0,			0x00}, // 0x5a
	{VK_NUMPAD3,	'3',		0,			0x00}, // 0x5b
	{VK_NUMPAD4,	'4',		0,			0x00}, // 0x5c
	{VK_NUMPAD5,	'5',		0,			0x00}, // 0x5d
	{VK_NUMPAD6,	'6',		0,			0x00}, // 0x5e
	{VK_NUMPAD7,	'7',		0,			0x00}, // 0x5f
	{VK_NUMPAD8,	'8',		0,			0x00}, // 0x60
	{VK_NUMPAD9,	'9',		0,			0x00}, // 0x61
	{VK_NUMPAD0,	'0',		0,			0x00}, // 0x62
	{VK_DECIMAL,	'.',		0,			0x00}, // 0x63
	{0,				0,			0,			0x00}, // 0x64
	{0,				0,			0,			0x00}, // 0x65
	{0,				0,			0,			0x00}, // 0x66
	{0,				'=',		'=',		0x00}, // 0x67
	{0,				0,			0,			0x00}, // 0x68
	{0,				0,			0,			0x00}, // 0x69
	{0,				0,			0,			0x00}, // 0x6a
	{0,				0,			0,			0x00}, // 0x6b
	{0,				0,			0,			0x00}, // 0x6c
	{0,				0,			0,			0x00}, // 0x6d
	{0,				0,			0,			0x00}, // 0x6e
	{0,				0,			0,			0x00}, // 0x6f
	{0,				0,			0,			0x00}, // 0x70
	{0,				0,			0,			0x00}, // 0x71
	{0,				0,			0,			0x00}, // 0x72
	{0,				0,			0,			0x00}, // 0x73
	{0,				0,			0,			0x00}, // 0x74
	{0,				0,			0,			0x00}, // 0x75
	{0,				0,			0,			0x00}, // 0x76
	{0,				0,			0,			0x00}, // 0x77
	{0,				0,			0,			0x00}, // 0x78
	{0,				0,			0,			0x00}, // 0x79
	{0,				0,			0,			0x00}, // 0x7a
	{0,				0,			0,			0x00}, // 0x7b
	{0,				0,			0,			0x00}, // 0x7c
	{0,				0,			0,			0x00}, // 0x7d
	{0,				0,			0,			0x00}, // 0x7e
	{0,				0,			0,			0x00}, // 0x7f
	{0,				0,			0,			0x00}, // 0x80
	{0,				0,			0,			0x00}, // 0x81
	{0,				0,			0,			0x00}, // 0x82
	{0,				0,			0,			0x00}, // 0x83
	{0,				0,			0,			0x00}, // 0x84
	{0,				0,			0,			0x00}, // 0x85
	{0,				0,			0,			0x00}, // 0x86
	{VK_OEM_102,	'\\',		'_',		0x00}, // 0x87
	{0,				0,			0,			0x00}, // 0x88
	{VK_OEM_5,		'\\',		'|',		0x00}, // 0x89
	{0,				0,			0,			0x00}, // 0x8a
	{0,				0,			0,			0x00}, // 0x8b
	{0,				0,			0,			0x00}, // 0x8c
	{0,				0,			0,			0x00}, // 0x8d
	{0,				0,			0,			0x00}, // 0x8e
	{0,				0,			0,			0x00}, // 0x8f
	{0,				0,			0,			0x00}, // 0x90
	{0,				0,			0,			0x00}, // 0x91
	{0,				0,			0,			0x00}, // 0x92
	{0,				0,			0,			0x00}, // 0x93
	{0,				0,			0,			0x00}, // 0x94
	{0,				0,			0,			0x00}, // 0x95
	{0,				0,			0,			0x00}, // 0x96
	{0,				0,			0,			0x00}, // 0x97
	{0,				0,			0,			0x00}, // 0x98
	{0,				0,			0,			0x00}, // 0x99
	{0,				0,			0,			0x00}, // 0x9a
	{0,				0,			0,			0x00}, // 0x9b
	{0,				0,			0,			0x00}, // 0x9c
	{0,				0,			0,			0x00}, // 0x9d
	{0,				0,			0,			0x00}, // 0x9e
	{0,				0,			0,			0x00}, // 0x9f
	{0,				0,			0,			0x00}, // 0xa0
	{0,				0,			0,			0x00}, // 0xa1
	{0,				0,			0,			0x00}, // 0xa2
	{0,				0,			0,			0x00}, // 0xa3
	{0,				0,			0,			0x00}, // 0xa4
	{0,				0,			0,			0x00}, // 0xa5
	{0,				0,			0,			0x00}, // 0xa6
	{0,				0,			0,			0x00}, // 0xa7
	{0,				0,			0,			0x00}, // 0xa8
	{0,				0,			0,			0x00}, // 0xa9
	{0,				0,			0,			0x00}, // 0xaa
	{0,				0,			0,			0x00}, // 0xab
	{0,				0,			0,			0x00}, // 0xac
	{0,				0,			0,			0x00}, // 0xad
	{0,				0,			0,			0x00}, // 0xae
	{0,				0,			0,			0x00}, // 0xaf
	{0,				0,			0,			0x00}, // 0xb0
	{0,				0,			0,			0x00}, // 0xb1
	{0,				0,			0,			0x00}, // 0xb2
	{0,				0,			0,			0x00}, // 0xb3
	{0,				0,			0,			0x00}, // 0xb4
	{0,				0,			0,			0x00}, // 0xb5
	{0,				0,			0,			0x00}, // 0xb6
	{0,				0,			0,			0x00}, // 0xb7
	{0,				0,			0,			0x00}, // 0xb8
	{0,				0,			0,			0x00}, // 0xb9
	{0,				0,			0,			0x00}, // 0xba
	{0,				0,			0,			0x00}, // 0xbb
	{0,				0,			0,			0x00}, // 0xbc
	{0,				0,			0,			0x00}, // 0xbd
	{0,				0,			0,			0x00}, // 0xbe
	{0,				0,			0,			0x00}, // 0xbf
	{0,				0,			0,			0x00}, // 0xc0
	{0,				0,			0,			0x00}, // 0xc1
	{0,				0,			0,			0x00}, // 0xc2
	{0,				0,			0,			0x00}, // 0xc3
	{0,				0,			0,			0x00}, // 0xc4
	{0,				0,			0,			0x00}, // 0xc5
	{0,				0,			0,			0x00}, // 0xc6
	{0,				0,			0,			0x00}, // 0xc7
	{0,				0,			0,			0x00}, // 0xc8
	{0,				0,			0,			0x00}, // 0xc9
	{0,				0,			0,			0x00}, // 0xca
	{0,				0,			0,			0x00}, // 0xcb
	{0,				0,			0,			0x00}, // 0xcc
	{0,				0,			0,			0x00}, // 0xcd
	{0,				0,			0,			0x00}, // 0xce
	{0,				0,			0,			0x00}, // 0xcf
	{0,				0,			0,			0x00}, // 0xd0
	{0,				0,			0,			0x00}, // 0xd1
	{0,				0,			0,			0x00}, // 0xd2
	{0,				0,			0,			0x00}, // 0xd3
	{0,				0,			0,			0x00}, // 0xd4
	{0,				0,			0,			0x00}, // 0xd5
	{0,				0,			0,			0x00}, // 0xd6
	{0,				0,			0,			0x00}, // 0xd7
	{0,				0,			0,			0x00}, // 0xd8
	{0,				0,			0,			0x00}, // 0xd9
	{0,				0,			0,			0x00}, // 0xda
	{0,				0,			0,			0x00}, // 0xdb
	{0,				0,			0,			0x00}, // 0xdc
	{0,				0,			0,			0x00}, // 0xdd
	{0,				0,			0,			0x00}, // 0xde
	{0,				0,			0,			0x00}, // 0xdf
	{VK_LCONTROL,	0,			0,			0x00}, // 0xe0
	{VK_LSHIFT,		0,			0,			0x00}, // 0xe1
	{VK_LMENU,		0,			0,			0x00}, // 0xe2
	{VK_LWIN,		0,			0,			0x00}, // 0xe3
	{VK_RCONTROL,	0,			0,			0x00}, // 0xe4
	{VK_RSHIFT,		0,			0,			0x00}, // 0xe5
	{VK_RMENU,		0,			0,			0x00}, // 0xe6
	{VK_RWIN,		0,			0,			0x00}, // 0xe7
	{0,				0,			0,			0x00}, // 0xe8
	{0,				0,			0,			0x00}, // 0xe9
	{0,				0,			0,			0x00}, // 0xea
	{0,				0,			0,			0x00}, // 0xeb
	{0,				0,			0,			0x00}, // 0xec
	{0,				0,			0,			0x00}, // 0xed
	{0,				0,			0,			0x00}, // 0xee
	{0,				0,			0,			0x00}, // 0xef
	{0,				0,			0,			0x00}, // 0xf0
	{0,				0,			0,			0x00}, // 0xf1
	{0,				0,			0,			0x00}, // 0xf2
	{0,				0,			0,			0x00}, // 0xf3
	{0,				0,			0,			0x00}, // 0xf4
	{0,				0,			0,			0x00}, // 0xf5
	{0,				0,			0,			0x00}, // 0xf6
	{0,				0,			0,			0x00}, // 0xf7
	{0,				0,			0,			0x00}, // 0xf8
	{0,				0,			0,			0x00}, // 0xf9
	{0,				0,			0,			0x00}, // 0xfa
	{0,				0,			0,			0x00}, // 0xfb
	{0,				0,			0,			0x00}, // 0xfc
	{0,				0,			0,			0x00}, // 0xfd
	{0,				0,			0,			0x00}, // 0xfe
	{0,				0,			0,			0x00}, // 0xff
};
*/

//------------------------------------------------------------------------------
// KeyboardDumb
//------------------------------------------------------------------------------
KeyboardDumb KeyboardDumb::Instance;

//------------------------------------------------------------------------------
// KeyboardStdio
//------------------------------------------------------------------------------
KeyboardStdio KeyboardStdio::Instance;

bool KeyboardStdio::GetKeyDataNB(KeyData* pKeyData)
{
	int ch;
	while ((ch = ::stdio_getchar_timeout_us(0)) > 0 && !decoder_.FeedChar(ch)) ;
	return decoder_.GetKeyData(pKeyData);
}

int KeyboardStdio::SenseKeyData(KeyData keyDataTbl[], int nKeysMax)
{
	return (nKeysMax > 0 && GetKeyDataNB(&keyDataTbl[0]))? 1 : 0;
}

}
