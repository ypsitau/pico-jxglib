#!/usr/bin/env gurax
import(re)
import(jpeg)
import(argopt)

tmpl = tR'''
#include "jxglib/Image.h"

static const jxglib::Image ${varName} = { jxglib::Image::Format::RGB565, ${img.width}, ${img.height},
${'"' + (img.Scan():iter {|color|
	rgb565 = color.rgb565, Format('\\x%02x\\x%02x', rgb565 & 0xff, rgb565 >> 8)
}).Fold(16):*Join() + '"\n'}
};
'''

MakeVarNameFromFileName(fileName as String) = fileName.Sub("[$%'@{}~`!#\(\)\.-]", '_')

argopt.Parser {|p|
	//p.OptString('param1', 'p', 'help for param1')
	//p.OptString('param2', 'q', 'help for param2')
	//p.OptBool('flag1', 'f', 'help for flag1')
	try {[argv, opt] = p.Parse(sys.argv)} catch {|e|
		sys.cerr.Println(e.text)
		sys.Exit(1)
	}
}
argv.Each {|arg|
	path.Glob(arg).Each {|fileName|
		baseName = path.BaseName(fileName)
		fileNameOut = baseName + '.h'
		varName = 'image_' + MakeVarNameFromFileName(baseName)
		img = Image(fileName)
		tmpl.Render('>' + fileNameOut)
		sys.cerr.Printf('%s was generated\n', fileNameOut)
	}
}
