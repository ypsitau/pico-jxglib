.program JMP_Test
	jmp	    label
	jmp	    !x		label
	jmp	    x--		label
	jmp	    !y		label
	jmp	    y--		label
	jmp	    x!=y	label
	jmp	    pin		label
	jmp	    !osre	label
label:
	nop

.program WAIT_Test
.pio_version 1
	wait	1 gpio	0
	wait	1 pin 	0
	wait	1 irq 	0
;	wait	1 jmppin 	0
	wait	0 gpio	0
	wait	0 pin 	0
	wait	0 irq 	0
;	wait	0 jmppin 	0
	wait	1 gpio	1
	wait	1 pin 	1
	wait	1 irq 	1
;	wait	1 jmppin 	1
	wait	1 gpio	31
	wait	1 pin 	31
	wait	1 irq 	7
;	wait	1 jmppin 	3
	wait	1 irq 	1	rel
;	wait	1 irq 	1	prev
;	wait	1 irq 	1	next

.program IN_Test
	in	    pins,	32
	in	    x,		32
	in	    y,		32
	in	    null,	32
	in	    isr,	32
	in	    osr,	32
	in	    pins,	1
	in	    x,		1
	in	    y,		1
	in	    null,	1
	in	    isr,	1
	in	    osr,	1
	in	    pins,	31
	in	    x,		31
	in	    y,		31
	in	    null,	31
	in	    isr,	31
	in	    osr,	31

.program OUT_Test
	out	    pins,		32
	out	    x,			32
	out	    y,			32
	out	    null,		32
	out	    pindirs,	32
	out	    pc,			32
	out	    isr,		32
	out	    exec,		32
	out	    pins,		1
	out	    x,			1
	out	    y,			1
	out	    null,		1
	out	    pindirs,	1
	out	    pc,			1
	out	    isr,		1
	out	    exec,		1
	out	    pins,		31
	out	    x,			31
	out	    y,			31
	out	    null,		31
	out	    pindirs,	31
	out	    pc,			31
	out	    isr,		31
	out	    exec,		31

.program PUSH_Test
	push
	push	    iffull
	push	    block
	push	    noblock
	push	    iffull	block
	push	    iffull	noblock

.program PULL_Test
	pull
	pull	    ifempty
	pull	    block
	pull	    noblock
	pull	    ifempty	block
	pull	    ifempty	noblock

;.program MOV_rxfifo_isr_Test
;.pio_version 1
;	mov	    rxfifo[y],	isr
;	mov	    rxfifo[0],	isr
;	mov	    rxfifo[1],	isr
;	mov	    rxfifo[7],	isr
;	mov	    rxfifo[0],	isr
;	mov	    rxfifo[1],	isr
;	mov	    rxfifo[7],	isr

;.program MOV_osr_rxfifo_Test
;.pio_version 1
;	mov	    osr,	rxfifo[y]
;	mov	    osr,	rxfifo[0]
;	mov	    osr,	rxfifo[1]
;	mov	    osr,	rxfifo[7]
;	mov	    osr,	rxfifo[0]
;	mov	    osr,	rxfifo[1]
;	mov	    osr,	rxfifo[7]

.program MOV_pins_Test
	mov	    pins,	pins
	mov	    pins,	x
	mov	    pins,	y
	mov	    pins,	null
	mov	    pins,	status
	mov	    pins,	isr
	mov	    pins,	osr

.program MOV_x_Test
	mov	    x,		pins
	mov	    x,		x
	mov	    x,		y
	mov	    x,		null
	mov	    x,		status
	mov	    x,		isr
	mov	    x,		osr

.program MOV_y_Test
	mov	    y,		pins
	mov	    y,		x
	mov	    y,		y
	mov	    y,		null
	mov	    y,		status
	mov	    y,		isr
	mov	    y,		osr

.program MOV_pindirs_Test
.pio_version 1
	mov	    pindirs,	pins
	mov	    pindirs,	x
	mov	    pindirs,	y
	mov	    pindirs,	null
	mov	    pindirs,	status
	mov	    pindirs,	isr
	mov	    pindirs,	osr

.program MOV_exec_Test
	mov	    exec,	pins
	mov	    exec,	x
	mov	    exec,	y
	mov	    exec,	null
	mov	    exec,	status
	mov	    exec,	isr
	mov	    exec,	osr

.program MOV_pc_Test
	mov	    pc,		pins
	mov	    pc,		x
	mov	    pc,		y
	mov	    pc,		null
	mov	    pc,		status
	mov	    pc,		isr
	mov	    pc,		osr

.program MOV_isr_Test
	mov	    isr,	pins
	mov	    isr,	x
	mov	    isr,	y
	mov	    isr,	null
	mov	    isr,	status
	mov	    isr,	isr
	mov	    isr,	osr

.program MOV_osr_Test
	mov	    osr,	pins
	mov	    osr,	x
	mov	    osr,	y
	mov	    osr,	null
	mov	    osr,	status
	mov	    osr,	isr
	mov	    osr,	osr

.program MOV_operator_Test
	mov	    pins,	x
	mov	    pins,	!x
	mov	    pins,	~x
	mov	    pins,	::x

.program IRQ_Test
	irq	    0
	irq	    set		0
	irq	    nowait	0
	irq	    wait	0
	irq	    clear	0
	irq	    set		1
	irq	    nowait	1
	irq	    wait	1
	irq	    clear	1
	irq	    set		7
	irq	    nowait	7
	irq	    wait	7
	irq	    clear	7
	irq	    set		0	rel
	irq	    nowait	0	rel
	irq	    wait	0	rel
	irq	    clear	0	rel
;	irq	    set		0	prev
;	irq	    nowait	0	prev
;	irq	    wait	0	prev
;	irq	    clear	0	prev
;	irq	    set		0	next
;	irq	    nowait	0	next
;	irq	    wait	0	next
;	irq	    clear	0	next

.program SET_Test
	set	    pins,	0
	set	    x,		0
	set	    y,		0
	set	    pindirs,	0
	set	    pins,	1
	set	    x,		1
	set	    y,		1
	set	    pindirs,	1
	set	    pins,	31
	set	    x,		31
	set	    y,		31
	set	    pindirs,	31

.program SIDE_SET_1_Test
.side_set 1
	nop		side 0b0
	nop		side 0b1

.program SIDE_SET_2_Test
.side_set 2
	nop		side 0b00
	nop		side 0b01
	nop		side 0b10
	nop		side 0b11

.program SIDE_SET_5_Test
.side_set 5
	nop		side 0b00000
	nop		side 0b00001
	nop		side 0b00010
	nop		side 0b00100
	nop		side 0b01000
	nop		side 0b10000

.program SIDE_SET_2_optional_Test
.side_set 2 opt
	nop		side 0b00
	nop	
	nop		side 0b01
	nop	
	nop		side 0b10
	nop	
	nop		side 0b11
	nop	

.program SIDE_SET_4_optional_Test
.side_set 4 opt
	nop		side 0b0000
	nop	
	nop		side 0b0001
	nop	
	nop		side 0b0010
	nop	
	nop		side 0b0100
	nop	
	nop		side 0b1000
	nop	

.program DELAY_Test
	nop		[0]
	nop		[1]
	nop		[31]

.program DELAY_SIDE_SET_2_Test
.side_set 2
	nop		side 0b11	[0]
	nop		side 0b11	[1]
	nop		side 0b11	[7]

.program DELAY_SIDE_SET_4_Test
.side_set 4
	nop		side 0b1111	[0]
	nop		side 0b1111	[1]

.program DELAY_SIDE_SET_3_optional_Test
.side_set 3 opt
	nop		side 0b111	[0]
	nop					[0]
	nop		side 0b111	[1]
	nop					[1]

% c-sdk {
%}
