#/usr/bin/env gurax

segmentTbl = %{
'a1' => R'''
...#######..............
..########..............
...#######..............
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
'''
'a2' => R'''
...........#######......
...........########.....
...........#######......
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
'''
'b' => R'''
........................
........................
...................#....
..................###...
..................###...
..................###...
..................###...
..................###...
..................###...
..................###...
..................###...
..................###...
..................###...
...................#....
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
'''
'c' => R'''
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
...................#....
..................###...
..................###...
..................###...
..................###...
..................###...
..................###...
..................###...
..................###...
..................###...
..................###...
...................#....
........................
........................
'''
'd1' => R'''
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
...#######..............
..########..............
...#######..............
'''
'd2' => R'''
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
...........#######......
...........########.....
...........#######......
'''
'e' => R'''
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
.#......................
###.....................
###.....................
###.....................
###.....................
###.....................
###.....................
###.....................
###.....................
###.....................
###.....................
.#......................
........................
........................
'''
'f' => R'''
........................
........................
.#......................
###.....................
###.....................
###.....................
###.....................
###.....................
###.....................
###.....................
###.....................
###.....................
###.....................
.#......................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
'''
'g1' => R'''
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
...######...............
..########..............
...######...............
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
'''
'g2' => R'''
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
............######......
...........########.....
............######......
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
'''
'h' => R'''
........................
........................
........................
...###..................
...###..................
...###..................
....###.................
....###.................
.....###................
.....###................
......###...............
......###...............
......###...............
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
'''
'i' => R'''
........................
........................
........................
.........###............
.........###............
.........###............
.........###............
.........###............
.........###............
.........###............
.........###............
.........###............
.........###............
..........#.............
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
'''
'j' => R'''
........................
........................
........................
...............###......
...............###......
...............###......
..............###.......
..............###.......
.............###........
.............###........
............###.........
............###.........
............###.........
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
'''
'k' => R'''
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
......###...............
......###...............
......###...............
.....###................
.....###................
....###.................
....###.................
...###..................
...###..................
...###..................
........................
........................
........................
'''
'l' => R'''
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
..........#.............
.........###............
.........###............
.........###............
.........###............
.........###............
.........###............
.........###............
.........###............
.........###............
.........###............
........................
........................
........................
'''
'm' => R'''
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
............###.........
............###.........
............###.........
.............###........
.............###........
..............###.......
..............###.......
...............###......
...............###......
...............###......
........................
........................
........................
'''
}

tmpl = tR'''
// 16-Segment Display Font
#ifndef PICO_JXGLIB_FONT_${fontName.Upper()}_H
#define PICO_JXGLIB_FONT_${fontName.Upper()}_H
#include "jxglib/Font.h"

namespace jxglib { namespace Font {
namespace NS_${fontName} {

const FontEntry f_Invalid = { 0x0000, 0, 0, ${xAdvance}, {
} };

${fontInfoTbl.Each {|fontInfo|}}
const FontEntry f_${Format('%04x', fontInfo.code)} = { 0x${Format('%04x', fontInfo.code)}, ${width}, ${height}, ${xAdvance}, {
${Format('0x%02x,', fontInfo.bitmap).Fold(24):*Join() + '\n'}
} };
${end}

}

const FontSet ${fontName} = { &NS_${fontName}::f_Invalid, {
	${Range(0x20, 0x7f) {|code|}}
	&NS_${fontName}::f_${Format('%04x', code)},
	${end}
}, 0, {
} };

} }

#endif
'''

FontInfo = class {
	code as Number
	bitmap[] as Number = []
	__init__(code as Number, data as String) = {
		this.code = code
		data.ToReader().ReadLines():chop {|line|
			this.bitmap.Append(('0b' + line.Fold(8)):*Align(8, `left, '.') \
							:*Replace('#', '1'):*Replace('.', '0'):*ToNumber())
		}
	}
}

fontInfoTbl = []

fontInfoTbl = @(FontInfo) {
{ 0x0020, R'''
...#######.######.......
..########.#######......
.#.#######.######.#.....
######...###.....###....
######...###.....###....
######...###.....###....
###.###..###.....###....
###.###..###.....###....
###..###.###.....###....
###..###.###.....###....
###...######.....###....
###...######.....###....
###...######.....###....
.#.######.#.#####.#.....
..########.#######......
.#.######.#.#####.#.....
###......###.....###....
###......###.....###....
###......###.....###....
###......###.....###....
###......###.....###....
###......###.....###....
###......###.....###....
###......###.....###....
###......###.....###....
###......###.....###....
.#.#######.######.#.....
..########.#######......
...#######.######.......
'''}
}
R'''
 - -
|\|/|
 - -
|/|\|
 - -
'''
patternTbl = [
R'''

    |

    |

'''
R'''
 - -
|  /

|/  |
 - -
'''
R'''

   /|

    |

'''
]

fontName = 'SISD32'
width = 20, height = 32, xAdvance = 24

//tmpl.Render(sys.cout)

PutBitmap(data[] as Number, src as String) = {
	src.ToReader().ReadLines():chop {|line|
		data.Append(('0b' + line.Fold(8)):*Align(8, `left, '.') \
						:*Replace('#', '1'):*Replace('.', '0'):*ToNumber())
	}
}

patternTbl.Each {|pattern|
	lines = pattern.EachLine():chop:*Align(5, `left)[]
	if (lines.len != 5) {
		sys.cerr.Println('invalid number of lines')
		sys.cerr.Println(pattern)
		sys.Exit()
	}
	data = Dim(height) { 0 }
	(lines[0][1] != ' ') && PutBitmap(data, segmentTbl['a1'])
	(lines[0][3] != ' ') && PutBitmap(data, segmentTbl['a2'])
	(lines[1][0] != ' ') && PutBitmap(data, segmentTbl['f'])
	(lines[1][1] != ' ') && PutBitmap(data, segmentTbl['h'])
	(lines[1][2] != ' ') && PutBitmap(data, segmentTbl['i'])
	(lines[1][3] != ' ') && PutBitmap(data, segmentTbl['j'])
	(lines[1][4] != ' ') && PutBitmap(data, segmentTbl['b'])
	(lines[2][1] != ' ') && PutBitmap(data, segmentTbl['g1'])
	(lines[2][3] != ' ') && PutBitmap(data, segmentTbl['g2'])
	(lines[3][0] != ' ') && PutBitmap(data, segmentTbl['e'])
	(lines[3][1] != ' ') && PutBitmap(data, segmentTbl['k'])
	(lines[3][2] != ' ') && PutBitmap(data, segmentTbl['l'])
	(lines[3][3] != ' ') && PutBitmap(data, segmentTbl['m'])
	(lines[3][4] != ' ') && PutBitmap(data, segmentTbl['c'])
	(lines[4][1] != ' ') && PutBitmap(data, segmentTbl['d1'])
	(lines[4][3] != ' ') && PutBitmap(data, segmentTbl['d2'])
	Println(data)
}
